// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FilmsColumns holds the columns for the "films" table.
	FilmsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "stadium_id", Type: field.TypeInt64, Nullable: true},
		{Name: "star", Type: field.TypeFloat64, Nullable: true},
		{Name: "attack_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "midfield_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "defence_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "goalkeeper_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "overall_rating", Type: field.TypeFloat64, Nullable: true},
		{Name: "logo_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "author_id", Type: field.TypeInt64, Nullable: true},
		{Name: "manager_id", Type: field.TypeInt64, Nullable: true},
	}
	// FilmsTable holds the schema information for the "films" table.
	FilmsTable = &schema.Table{
		Name:       "films",
		Columns:    FilmsColumns,
		PrimaryKey: []*schema.Column{FilmsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "films_users_author",
				Columns:    []*schema.Column{FilmsColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "films_users_manager",
				Columns:    []*schema.Column{FilmsColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tg_id", Type: field.TypeInt64, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "surname", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FilmsTable,
		UsersTable,
	}
)

func init() {
	FilmsTable.ForeignKeys[0].RefTable = UsersTable
	FilmsTable.ForeignKeys[1].RefTable = UsersTable
}
